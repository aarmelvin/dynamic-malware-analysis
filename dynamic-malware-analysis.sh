#!/bin/bash
echo "Dynamic Malware Analysis using DRAKVUF with 2 VMs"
ARGC=$#
if [ $ARGC -lt 4 ]; then
    echo "Usage: ./dynamic-malware-analysis.sh domain1 domain2 FirstMalwareNo. LastMalwareNo."
    exit 0;
fi

start-analysis() {
DOMAIN=$1
#Saving the Domain State
xl save -c $DOMAIN $DOMAIN.save
#Parse through one half of the malware samples 
for i in `seq $2 $3`
do
mkdir /malware_reports/$i-malware
DOMID=`xl domid $DOMAIN`
#Get the pid of explorer process
PID=`vmi-process-list $DOMAIN | grep explorer | cut -f2 -d" " | sed 's/.$//'`
#Starting the Malware Analysis
echo "Malware Analysis Started for $i-malware.exe "
../src/drakvuf -r /root/win7-rekall.json -d $DOMID -i $PID -e "C:\\Users\\vm3\\malware\\$i-malware.exe" -D /malware_reports/$i-malware -o csv -t 60 1>/malware_reports/$i-malware/drakvuf.log 2>&1
echo "Malware Analysis Completed for $i-malware.exe "
#Time in HoursMinutesSeconds
tme=`date +%H%M%S`
echo "$tme" >> /malware_reports/MalawareCompletionTime.txt
#Analysis Completed,Shutdown the Domain
xl destroy $DOMAIN
if [ $i -lt $3 ]
then
#Restore the Domain
xl restore $DOMAIN.save
fi
done
}

#Set Analysis Start Time
Stime=`date +%s`
#Start capturing packets using TCPDump
/usr/sbin/tcpdump -i xenbr0 -w /malware_reports/tcpdump.log &
newlastno=`expr $4 / 2`
nextno=`expr $newlastno + 1`
#Call Two Analysis Engine Parallely
start-analysis $1 $3 $newlastno &
start-analysis $2 $nextno $4
#Find Analysis End Time
endtime() {
	xl domid $1 &> /dev/null 
	if [ $? -eq 0 ]
	then
		endtime
	else
		#Record End Time
		Etime=`date +%s`
		#Stop Tcpdump capture
		pkill -15 tcpdump
		echo "Dynamic Malware Analysis Completed" | tee /malware_reports/AnalysisCompleted.txt
		echo "Starting Time was $Stime" | tee -a /malware_reports/AnalysisCompleted.txt
		echo "Ending Time was $Etime" | tee -a /malware_reports/AnalysisCompleted.txt
		dtime=`expr $Etime - $Stime`
		echo "Total Time Taken for the Analysis is $dtime seconds" | tee -a /malware_reports/AnalysisCompleted.txt
	fi
}
endtime
